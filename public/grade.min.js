!(function (e) {
	if ('object' == typeof exports && 'undefined' != typeof module) module.exports = e();
	else if ('function' == typeof define && define.amd) define([], e);
	else {
		var t;
		(t = 'undefined' != typeof window ? window : 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : this), (t.Grade = e());
	}
})(function () {
	return (function e(t, n, i) {
		function r(o, s) {
			if (!n[o]) {
				if (!t[o]) {
					var u = 'function' == typeof require && require;
					if (!s && u) return u(o, !0);
					if (a) return a(o, !0);
					var c = new Error("Cannot find module '" + o + "'");
					throw ((c.code = 'MODULE_NOT_FOUND'), c);
				}
				var g = (n[o] = { exports: {} });
				t[o][0].call(
					g.exports,
					function (e) {
						var n = t[o][1][e];
						return r(n ? n : e);
					},
					g,
					g.exports,
					e,
					t,
					n,
					i
				);
			}
			return n[o].exports;
		}
		for (var a = 'function' == typeof require && require, o = 0; o < i.length; o++) r(i[o]);
		return r;
	})(
		{
			1: [
				function (e, t, n) {
					'use strict';
					function i(e, t) {
						if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
					}
					var r = (function () {
							function e(e, t) {
								for (var n = 0; n < t.length; n++) {
									var i = t[n];
									(i.enumerable = i.enumerable || !1), (i.configurable = !0), 'value' in i && (i.writable = !0), Object.defineProperty(e, i.key, i);
								}
							}
							return function (t, n, i) {
								return n && e(t.prototype, n), i && e(t, i), t;
							};
						})(),
						a = ['webkit'],
						o = (function () {
							function e(t, n, r) {
								i(this, e),
									(this.callback = r || null),
									(this.container = t),
									(this.image = this.container.querySelector(n) || this.container.querySelector('img')),
									(this.gradientData = []),
									this.image && this.container && ((this.canvas = document.createElement('canvas')), (this.ctx = this.canvas.getContext('2d')), (this.imageDimensions = { width: 0, height: 0 }), (this.imageData = []), this.readImage());
							}
							return (
								r(e, [
									{
										key: 'readImage',
										value: function () {
											(this.imageDimensions.width = 0.1 * this.image.width), (this.imageDimensions.height = 0.1 * this.image.height), this.render();
										},
									},
									{
										key: 'getImageData',
										value: function () {
											var e = this.ctx.getImageData(0, 0, this.imageDimensions.width, this.imageDimensions.height).data;
											this.imageData = Array.from(e);
										},
									},
									{
										key: 'getChunkedImageData',
										value: function () {
											var e = 4,
												t = this.imageData.reduce(function (t, n, i) {
													var r = Math.floor(i / e);
													return t[r] || (t[r] = []), t[r].push(n), t;
												}, []),
												n = t.filter(function (e) {
													return (
														e.slice(0, 2).every(function (e) {
															return e < 250;
														}) &&
														e.slice(0, 2).every(function (e) {
															return e > 0;
														})
													);
												});
											return n;
										},
									},
									{
										key: 'getRGBAGradientValues',
										value: function (e) {
											return e
												.map(function (e, t) {
													return 'rgb(' + e.rgba.slice(0, 3).join(',') + ') ' + (0 == t ? '0%' : '75%');
												})
												.join(',');
										},
									},
									{
										key: 'getCSSGradientProperty',
										value: function (e) {
											var t = this.getRGBAGradientValues(e);
											console.log(t);
											return a
												.map(function (e) {
													return 'background-image: -' + e + '-linear-gradient(\n135deg,\n' + t + '\n)';
												})
												.concat(['background-image: linear-gradient(\n135deg,\n' + t + '\n)'])
												.join(';');
										},
									},
									{
										key: 'getMiddleRGB',
										value: function (e, t) {
											var n = 0,
												i = (n + 1) / 2,
												r = 1 - i,
												a = [parseInt(e[0] * i + t[0] * r), parseInt(e[1] * i + t[1] * r), parseInt(e[2] * i + t[2] * r)];
											return a;
										},
									},
									{
										key: 'getSortedValues',
										value: function (e) {
											var t = Object.keys(e)
												.map(function (t) {
													var n = t,
														i = t.split('|'),
														r = (299 * i[0] + 587 * i[1] + 114 * i[2]) / 1e3;
													return { rgba: n.split('|'), occurs: e[t], brightness: r };
												})
												.sort(function (e, t) {
													return e.occurs - t.occurs;
												})
												.reverse()
												.slice(0, 10);
											return t
												.sort(function (e, t) {
													return e.brightness - t.brightness;
												})
												.reverse();
										},
									},
									{
										key: 'getTextProperty',
										value: function (e) {
											var t = this.getMiddleRGB(e[0].rgba.slice(0, 3), e[1].rgba.slice(0, 3)),
												n = Math.round((299 * parseInt(t[0]) + 587 * parseInt(t[1]) + 114 * parseInt(t[2])) / 1e3);
											return n > 125 ? 'color: #000' : 'color: #fff';
										},
									},
									{
										key: 'getTopValues',
										value: function (e) {
											var t = this.getSortedValues(e);
											return [t[0], t[t.length - 1]];
										},
									},
									{
										key: 'getUniqValues',
										value: function (e) {
											return e.reduce(function (e, t) {
												var n = t.join('|');
												return e[n] ? ((e[n] = ++e[n]), e) : ((e[n] = 1), e);
											}, {});
										},
									},
									{
										key: 'renderGradient',
										value: function () {
											var e = window.localStorage,
												t = 'grade-' + this.image.getAttribute('src'),
												n = null;
											if (e && e.getItem(t)) n = JSON.parse(e.getItem(t));
											else {
												var i = this.getChunkedImageData();
												(n = this.getTopValues(this.getUniqValues(i))), e && e.setItem(t, JSON.stringify(n));
											}
											if (this.callback) return void (this.gradientData = n);
											var r = this.getCSSGradientProperty(n).split(';')[1],
												a = this.getTextProperty(n),
												o = r + '; ' + a,
												test = $(this.container).css('background-image');
											let n0r1 = n[0].rgba[0],
												n1r1 = n[1].rgba[0],
												o0r1 = test.substring(test.indexOf('rgb') + 4, test.indexOf(')', test.indexOf(')') - 1)).split(',')[0],
												o1r1 = test.substring(test.lastIndexOf('rgb') + 4, test.lastIndexOf(')', test.lastIndexOf(')') - 1)).split(',')[0],
												n0r2 = n[0].rgba[1],
												n1r2 = n[1].rgba[1],
												o0r2 = test.substring(test.indexOf('rgb') + 4, test.indexOf(')', test.indexOf(')') - 1)).split(',')[1],
												o1r2 = test.substring(test.lastIndexOf('rgb') + 4, test.lastIndexOf(')', test.lastIndexOf(')') - 1)).split(',')[1],
												n0r3 = n[0].rgba[2],
												n1r3 = n[1].rgba[2],
												o0r3 = test.substring(test.indexOf('rgb') + 4, test.indexOf(')', test.indexOf(')') - 1)).split(',')[2],
												o1r3 = test.substring(test.lastIndexOf('rgb') + 4, test.lastIndexOf(')', test.lastIndexOf(')') - 1)).split(',')[2];
											let ar = [
												[parseInt(o0r1), parseInt(n0r1)],
												[parseInt(o0r2), parseInt(n0r2)],
												[parseInt(o0r3), parseInt(n0r3)],
												[parseInt(o1r1), parseInt(n1r1)],
												[parseInt(o1r2), parseInt(n1r2)],
												[parseInt(o1r3), parseInt(n1r3)],
											];
											let arr = [];
											ar.forEach((el) => {
												let lowerr = el[0] < el[1] ? el[0] : el[1];
												let higherr = el[0] < el[1] ? el[1] : el[0];
												var list = [];
												for (var l = parseInt(lowerr); l <= parseInt(higherr); l++) {
													list.push(l);
												}
												arr.push(list);
											});
											let longestArray = arr.map((a) => a.length).indexOf(Math.max(...arr.map((a) => a.length)));
											arr.forEach((el) => {
												let diff = arr[longestArray].length - el.length;
												for (var l = 0; l < diff; l++) {
													el.push(el[el.length - 1]);
												}
											});
											ar.forEach(function (val, i) {
												if (val[0] > val[1]) {
													arr[i].reverse();
												}
											});

											for (var l = 0; l < arr[longestArray].length; l++) {
												let arg1 = arr[0][l] + ',' + arr[1][l] + ',' + arr[2][l];
												let arg2 = arr[3][l] + ',' + arr[4][l] + ',' + arr[5][l];
												setTimeout(() => {
													this.container.setAttribute('style', 'background-image: -webkit-linear-gradient(135deg,rgb(' + arg2 + ') 0%,rgb(' + arg1 + ') 75%);');
												}, l * 2);
											}

											console.log(arr);
											// console.log(r)
											// this.container.setAttribute("style", o);
										},
									},
									{
										key: 'render',
										value: function () {
											(this.canvas.width = this.imageDimensions.width), (this.canvas.height = this.imageDimensions.height), this.ctx.drawImage(this.image, 0, 0, this.imageDimensions.width, this.imageDimensions.height), this.getImageData(), this.renderGradient();
										},
									},
								]),
								e
							);
						})();
					t.exports = function (e, t, n) {
						var i = function (e, t, n) {
								var i = new o(e, t, n),
									r = i.gradientData;
								return r.length ? { element: e, gradientData: r } : null;
							},
							r = (
								NodeList.prototype.isPrototypeOf(e)
									? Array.from(e).map(function (e) {
											return i(e, t, n);
									  })
									: [i(e, t, n)]
							).filter(Boolean);
						if (r.length) return n(r);
					};
				},
				{},
			],
		},
		{},
		[1]
	)(1);
});
//# sourceMappingURL=grade.min.js.map
